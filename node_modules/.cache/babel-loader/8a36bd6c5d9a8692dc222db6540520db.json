{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\shashidhar.AS\\\\Downloads\\\\iNotes-master\\\\iNotes-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\shashidhar.AS\\\\Downloads\\\\iNotes-master\\\\iNotes-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\shashidhar.AS\\\\Downloads\\\\iNotes-master\\\\iNotes-master\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState}from\"react\";import NoteContext from\"./noteContext\";import{jsx as _jsx}from\"react/jsx-runtime\";var NoteState=function NoteState(props){// const host = \"http://localhost:5000\"\nvar host=\"https://mern-inotebook-dgdj.onrender.com\";var notesInitial=[];var _useState=useState(notesInitial),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];// Add a Note\nvar getNotes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(host,\"/api/notes/fetchAllNotes\"),{method:'GET',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:json=_context.sent;setNotes(json);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getNotes(){return _ref.apply(this,arguments);};}();// Add a Note\nvar addNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title,description,tag){var response,note;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(host,\"/api/notes/addNote\"),{method:'POST',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({title:title,description:description,tag:tag})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:note=_context2.sent;setNotes(notes.concat(note));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function addNote(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();// Delete a Note\nvar deleteNote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var response,json,newNotes;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(host,\"/api/notes/deleteNote/\").concat(id),{method:'DELETE',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});case 2:response=_context3.sent;_context3.next=5;return response.json();case 5:json=_context3.sent;console.log(json);newNotes=notes.filter(function(note){return note._id!==id;});setNotes(newNotes);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function deleteNote(_x4){return _ref3.apply(this,arguments);};}();// Edit a Note\nvar editNote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id,title,description,tag){var response,json,newNotes,index,element;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"\".concat(host,\"/api/notes/updateNote/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({title:title,description:description,tag:tag})});case 2:response=_context4.sent;json=response.json();console.log(json);newNotes=JSON.parse(JSON.stringify(notes));// Logic to edit in client\nindex=0;case 7:if(!(index<notes.length)){_context4.next=17;break;}element=notes[index];if(!(element._id===id)){_context4.next=14;break;}newNotes[index].title=title;newNotes[index].description=description;newNotes[index].tag=tag;return _context4.abrupt(\"break\",17);case 14:index++;_context4.next=7;break;case 17:setNotes(newNotes);case 18:case\"end\":return _context4.stop();}}},_callee4);}));return function editNote(_x5,_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsx(NoteContext.Provider,{value:{notes:notes,addNote:addNote,deleteNote:deleteNote,editNote:editNote,getNotes:getNotes},children:props.children});};export default NoteState;","map":{"version":3,"sources":["C:/Users/shashidhar.AS/Downloads/iNotes-master/iNotes-master/src/context/notes/NoteState.js"],"names":["React","useState","NoteContext","NoteState","props","host","notesInitial","notes","setNotes","getNotes","fetch","method","headers","localStorage","getItem","response","json","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","console","log","newNotes","filter","_id","editNote","parse","index","length","element","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\n\nconst NoteState = (props) => {\n    // const host = \"http://localhost:5000\"\n    const host = \"https://mern-inotebook-dgdj.onrender.com\"\n    const notesInitial = []\n    const [notes, setNotes] = useState(notesInitial)\n\n    // Add a Note\n    const getNotes = async () => {\n        // API Call\n        const response = await fetch(`${host}/api/notes/fetchAllNotes`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            }\n        });\n        const json = await response.json();\n        setNotes(json);\n    }\n\n    // Add a Note\n    const addNote = async (title, description, tag) => {\n        // API Call\n        const response = await fetch(`${host}/api/notes/addNote`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n            body: JSON.stringify({title, description, tag})\n        });\n        const note = await response.json();\n        setNotes(notes.concat(note))\n    }\n\n    // Delete a Note\n    const deleteNote = async (id) => {\n        // API Call\n        const response = await fetch(`${host}/api/notes/deleteNote/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            }\n        });\n        const json = await response.json();\n        console.log(json);\n        const newNotes = notes.filter((note) => { return note._id !== id })\n        setNotes(newNotes)\n    }\n\n    // Edit a Note\n    const editNote = async (id, title, description, tag) => {\n        // API Call\n        const response = await fetch(`${host}/api/notes/updateNote/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n            body: JSON.stringify({title, description, tag})\n        });\n\n        const json = response.json();\n        console.log(json);\n\n        let newNotes = JSON.parse(JSON.stringify(notes));\n\n        // Logic to edit in client\n        for (let index = 0; index < notes.length; index++) {\n            const element = notes[index];\n            if (element._id === id) {\n                newNotes[index].title = title\n                newNotes[index].description = description\n                newNotes[index].tag = tag\n                break;\n            }\n        }\n        setNotes(newNotes);\n    }\n\n    return (\n        <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\n            {props.children}\n        </NoteContext.Provider>\n    )\n}\n\nexport default NoteState;"]},"metadata":{},"sourceType":"module"}